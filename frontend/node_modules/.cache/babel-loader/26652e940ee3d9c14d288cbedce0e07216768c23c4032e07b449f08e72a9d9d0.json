{"ast":null,"code":"document.getElementById(\"login\").addEventListener(\"submit\", function (e) {\n  e.preventDefault();\n\n  // Get user credentials from form\n  const userCredentials = {\n    email: document.getElementById(\"login-email\").value,\n    password: document.getElementById(\"login-password\").value\n  };\n\n  // Make a POST request to login the user\n  fetch('http://localhost:8080/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  }).then(response => response.json()).then(data => {\n    if (data.success) {\n      alert(\"Login Successful\");\n      // Redirect to another page or show user dashboard\n    } else {\n      alert(\"Invalid credentials, please try again.\");\n    }\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n});","map":{"version":3,"names":["document","getElementById","addEventListener","e","preventDefault","userCredentials","email","value","password","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","alert","catch","error","console"],"sources":["/Users/paviii/FoodWasteReductionPlatform/frontend/src/components/Login.js"],"sourcesContent":["document.getElementById(\"login\").addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n\n    // Get user credentials from form\n    const userCredentials = {\n        email: document.getElementById(\"login-email\").value,\n        password: document.getElementById(\"login-password\").value\n    };\n\n    // Make a POST request to login the user\n    fetch('http://localhost:8080/users/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userCredentials)\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            alert(\"Login Successful\");\n            // Redirect to another page or show user dashboard\n        } else {\n            alert(\"Invalid credentials, please try again.\");\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n    });\n});\n"],"mappings":"AAAAA,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,UAASC,CAAC,EAAE;EACpEA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,MAAMC,eAAe,GAAG;IACpBC,KAAK,EAAEN,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACM,KAAK;IACnDC,QAAQ,EAAER,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACM;EACxD,CAAC;;EAED;EACAE,KAAK,CAAC,mCAAmC,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,eAAe;EACxC,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACV,IAAIA,IAAI,CAACC,OAAO,EAAE;MACdC,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACJ,CAAC,MAAM;MACHA,KAAK,CAAC,wCAAwC,CAAC;IACnD;EACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}